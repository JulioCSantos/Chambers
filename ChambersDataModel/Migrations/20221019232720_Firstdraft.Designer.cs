// <auto-generated />
using System;
using ChambersDataModel;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChambersDataModel.Migrations
{
    [DbContext(typeof(ChambersDbContext))]
    [Migration("20221019232720_Firstdraft")]
    partial class Firstdraft
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChambersDataModel.CollectionPointsPace", b =>
                {
                    b.Property<int>("PaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaceId"), 1L, 1);

                    b.Property<DateTime?>("NestStepEndTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime")
                        .HasComputedColumnSql("(dateadd(day,[StepSizeDays],[NextStepStartTime]))", false);

                    b.Property<DateTime>("NextStepStartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("StepSizeDays")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("PaceId")
                        .HasName("PK__Collecti__F7F38BBDBAF2C721");

                    b.HasIndex("TagId");

                    b.ToTable("CollectionPointsPace", (string)null);
                });

            modelBuilder.Entity("ChambersDataModel.CollectionPointsPaceLog", b =>
                {
                    b.Property<int>("PaceLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaceLogId"), 1L, 1);

                    b.Property<int>("PaceId")
                        .HasColumnType("int");

                    b.Property<int>("StageDatesId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StepEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StepStartTime")
                        .HasColumnType("datetime");

                    b.HasKey("PaceLogId")
                        .HasName("PK__Collecti__B49BB7D0F52C5D73");

                    b.HasIndex("PaceId");

                    b.HasIndex("StageDatesId");

                    b.ToTable("CollectionPointsPaceLog", (string)null);
                });

            modelBuilder.Entity("ChambersDataModel.CollectionPointsPaceLogCalc", b =>
                {
                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<int>("PaceId")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StepEndTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("StepStartTime")
                        .HasColumnType("datetime");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.ToView("CollectionPointsPaceLogCalc");
                });

            modelBuilder.Entity("ChambersDataModel.CompValue", b =>
                {
                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tag");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime")
                        .HasColumnName("time");

                    b.Property<double>("Value")
                        .HasColumnType("float")
                        .HasColumnName("value");

                    b.ToTable("CompValues");
                });

            modelBuilder.Entity("ChambersDataModel.Excursion", b =>
                {
                    b.Property<int>("ExcursionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExcursionId"), 1L, 1);

                    b.Property<DateTime>("RampInDateTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("RampOutDateTime")
                        .HasColumnType("datetime");

                    b.Property<int?>("RampOutPointId")
                        .HasColumnType("int");

                    b.Property<int?>("RampinPointId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasIndex("RampOutPointId");

                    b.HasIndex("RampinPointId");

                    b.ToTable("Excursions");
                });

            modelBuilder.Entity("ChambersDataModel.ExcursionPoint", b =>
                {
                    b.Property<int>("PointId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PointId"), 1L, 1);

                    b.Property<int>("ExcursionType")
                        .HasColumnType("int");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<int>("PaceLogId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<double>("Value")
                        .HasColumnType("float");

                    b.Property<DateTime>("ValueDate")
                        .HasColumnType("datetime");

                    b.HasKey("PointId")
                        .HasName("PK__Excursio__40A977E1FEC34C08");

                    b.HasIndex("ExcursionType");

                    b.HasIndex("PaceLogId");

                    b.ToTable("ExcursionPoints");
                });

            modelBuilder.Entity("ChambersDataModel.ExcursionType", b =>
                {
                    b.Property<int>("ExcursionType1")
                        .HasColumnType("int")
                        .HasColumnName("ExcursionType");

                    b.Property<string>("ExcursionDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("ExcursionType1")
                        .HasName("PK__Excursio__B449CF3A168138C4");

                    b.ToTable("ExcursionTypes");
                });

            modelBuilder.Entity("ChambersDataModel.Stage", b =>
                {
                    b.Property<int>("StageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StageId"), 1L, 1);

                    b.Property<double>("MaxValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValueSql("((3.4000000000000000e+038))");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<string>("StageName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("StageId");

                    b.HasIndex(new[] { "TagId", "StageName" }, "IxTagStageName")
                        .IsUnique()
                        .HasFilter("[StageName] IS NOT NULL");

                    b.ToTable("Stages");
                });

            modelBuilder.Entity("ChambersDataModel.StagesDate", b =>
                {
                    b.Property<int>("StageDateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StageDateId"), 1L, 1);

                    b.Property<DateTime?>("EndDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('9999-12-31 11:11:59')");

                    b.Property<int>("StageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("StageDateId")
                        .HasName("PK__StagesDa__CBAD5D1F69D91647");

                    b.HasIndex(new[] { "StageId", "StartDate" }, "IxStagesDatesTagIdStartDate");

                    b.ToTable("StagesDates");
                });

            modelBuilder.Entity("ChambersDataModel.StagesLimitsAndDate", b =>
                {
                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<double>("MaxValue")
                        .HasColumnType("float");

                    b.Property<double>("MinValue")
                        .HasColumnType("float");

                    b.Property<int>("StageDateId")
                        .HasColumnType("int");

                    b.Property<string>("StageName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.ToView("StagesLimitsAndDates");
                });

            modelBuilder.Entity("ChambersDataModel.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.Property<string>("TagName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("ChambersDataModel.CollectionPointsPace", b =>
                {
                    b.HasOne("ChambersDataModel.Tag", "Tag")
                        .WithMany("CollectionPointsPaces")
                        .HasForeignKey("TagId")
                        .IsRequired()
                        .HasConstraintName("FK__Collectio__TagId__36B12243");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ChambersDataModel.CollectionPointsPaceLog", b =>
                {
                    b.HasOne("ChambersDataModel.CollectionPointsPace", "Pace")
                        .WithMany("CollectionPointsPaceLogs")
                        .HasForeignKey("PaceId")
                        .IsRequired()
                        .HasConstraintName("FK__Collectio__PaceI__37A5467C");

                    b.HasOne("ChambersDataModel.StagesDate", "StageDates")
                        .WithMany("CollectionPointsPaceLogs")
                        .HasForeignKey("StageDatesId")
                        .IsRequired()
                        .HasConstraintName("FK__Collectio__Stage__38996AB5");

                    b.Navigation("Pace");

                    b.Navigation("StageDates");
                });

            modelBuilder.Entity("ChambersDataModel.Excursion", b =>
                {
                    b.HasOne("ChambersDataModel.ExcursionPoint", "RampOutPoint")
                        .WithMany()
                        .HasForeignKey("RampOutPointId")
                        .HasConstraintName("FK__Excursion__RampO__3C69FB99");

                    b.HasOne("ChambersDataModel.ExcursionPoint", "RampinPoint")
                        .WithMany()
                        .HasForeignKey("RampinPointId")
                        .HasConstraintName("FK__Excursion__Rampi__3B75D760");

                    b.Navigation("RampOutPoint");

                    b.Navigation("RampinPoint");
                });

            modelBuilder.Entity("ChambersDataModel.ExcursionPoint", b =>
                {
                    b.HasOne("ChambersDataModel.ExcursionType", "ExcursionTypeNavigation")
                        .WithMany("ExcursionPoints")
                        .HasForeignKey("ExcursionType")
                        .IsRequired()
                        .HasConstraintName("FK__Excursion__Excur__398D8EEE");

                    b.HasOne("ChambersDataModel.CollectionPointsPaceLog", "PaceLog")
                        .WithMany("ExcursionPoints")
                        .HasForeignKey("PaceLogId")
                        .IsRequired()
                        .HasConstraintName("FK__Excursion__PaceL__3A81B327");

                    b.Navigation("ExcursionTypeNavigation");

                    b.Navigation("PaceLog");
                });

            modelBuilder.Entity("ChambersDataModel.Stage", b =>
                {
                    b.HasOne("ChambersDataModel.Tag", "Tag")
                        .WithMany("Stages")
                        .HasForeignKey("TagId")
                        .IsRequired()
                        .HasConstraintName("TagsTagId2StagesTagId");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ChambersDataModel.StagesDate", b =>
                {
                    b.HasOne("ChambersDataModel.Stage", "Stage")
                        .WithMany("StagesDates")
                        .HasForeignKey("StageId")
                        .IsRequired()
                        .HasConstraintName("FkStagesStageId_StageId");

                    b.Navigation("Stage");
                });

            modelBuilder.Entity("ChambersDataModel.CollectionPointsPace", b =>
                {
                    b.Navigation("CollectionPointsPaceLogs");
                });

            modelBuilder.Entity("ChambersDataModel.CollectionPointsPaceLog", b =>
                {
                    b.Navigation("ExcursionPoints");
                });

            modelBuilder.Entity("ChambersDataModel.ExcursionType", b =>
                {
                    b.Navigation("ExcursionPoints");
                });

            modelBuilder.Entity("ChambersDataModel.Stage", b =>
                {
                    b.Navigation("StagesDates");
                });

            modelBuilder.Entity("ChambersDataModel.StagesDate", b =>
                {
                    b.Navigation("CollectionPointsPaceLogs");
                });

            modelBuilder.Entity("ChambersDataModel.Tag", b =>
                {
                    b.Navigation("CollectionPointsPaces");

                    b.Navigation("Stages");
                });
#pragma warning restore 612, 618
        }
    }
}
